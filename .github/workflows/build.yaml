name: Build

on: [push]

# env:
#   # Path to the solution file relative to the root of the project.
#   SOLUTION_FILE_PATH: ./DarkConfig.sln

#   # Configuration type to build.
#   # You can convert this to a build matrix if you need coverage of multiple configuration types.
#   # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
#   BUILD_CONFIGURATION: Debug

jobs:
  build:
    runs-on: windows-latest

    # steps:
    # - uses: actions/checkout@v2

    # - name: Add MSBuild to PATH
    #   uses: microsoft/setup-msbuild@v1.0.2

    # - name: Restore NuGet packages
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    # - name: Build
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   # Add additional options to the MSBuild command line here (like platform or verbosity level).
    #   # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    #   run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: '4.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      